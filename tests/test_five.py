# import pytest
# from dz5.f import binary_search


# @pytest.mark.parametrize(
#     ('sequence', 'key','b'),
#     [
#         ([1, 2, 3, 4, 5], 4, 3),
#         ([1, 2, 3, 4, 5], 6, None),
#         ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 3, 2),
#         ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 4, 3),
#         ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 1, 0),
#         ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], -1, None),
#         ([2, 3, 4, 4, 4, 5, 6], 4, 3),
#         ([1, 1, 2, 2, 3, 3, 3, 27, 28, 56], 2, 2),
#         ([56, 230, 234, 747, 83274, 666555444], 666555444, 5),
#         ([1], 1, 0),
#         ([], 42, None),
#         ([0], 0, 0),
#         ([0], 1, None),
#         ([-1, 0, 42], 0, 1),
#         ([-42, 0, 42], 42, 2),
#         ([-6, -5, -4, -3, -2, -1], -4, 2),
#         ([1, 2, 3, 4, 5, 6], 4, 3),
#         ([1, 2, 3, 4, 5, 6, 7], 4, 3),
#         ([1, 2, 3, 4, 5], 7, None),
#         ([1, 2, 3, 4, 5, 6], 7, None),
#         ([42, 42, 42, 42, 42], 42, 0),
#         ([-42, -42, -42, -42, -42], -42, 0),
#         ([42, 42, 42, 42, 43], 43, 4),
#         ([41, 42, 42, 42, 42], 41, 0),
#         ([-2, -2, -1, 0, 1, 2, 2, 2], -1, 2),
#         ([-2, -2, -1, 0, 1, 1, 2, 2], 1, 4)
#     ]
# )
# def test(sequence, key, b):
#     assert binary_search(sequence, key) == b